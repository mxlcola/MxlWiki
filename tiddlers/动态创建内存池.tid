annotate-colour: dodgerblue
created: 20241109013928459
difficulty: 4.93
due: 20241114112920071
elapsed_days: 0.8671590393518519
lapses: 0
last_review: 20241111112920071
modified: 20241109014109719
reps: 2
scheduled_days: 3
stability: 2.4
state: 2
tags: 管理内存池的函数接口 ?
title: 动态创建内存池
type: text/vnd.tiddlywiki

RT-Thread 创建内存池，与创建其他内核对象类似，具有两种方式：动态创建、静态初始化。

动态创建内存池是由内核负责完成分配内存池需要的内存资源，包括内存池控制块和内存池缓冲区。创建内存池的函数原型如下：

```c
rt_mp_t rt_mp_create(const char* name,
                      rt_size_t block_count,
                      rt_size_t block_size)
```

* 参数 name 内存池的名字；block_count 为内存池中小内存块的个数；block_size 为内存块的大小，单位字节。
* 创建成功，则返回内存池对象句柄；否则，返回 RT_NULL。
* 调用 rt_mp_create() 可以创建一个与需求的内存块大小、数目相匹配的内存池 。该函数从系统中申请一个内存池对象，自动分配内存池控制块，然后从内存堆中分配一个内存缓冲，该缓冲区大小由内存块数目与块大小计算得到的。

申请的资源准备好后，初始化内存池控制块，然后将内存缓冲区组织成可用于分配的空闲块链表。

''注意：动态创建内存池时，需要内存堆资源能够满足要求。''