annotate-colour: green
created: 20241202134617564
creator: mxlcola
difficulty: 4.93
due: 20241203004802915
elapsed_days: 0
lapses: 0
last_review: 20241203003802915
modified: 20241203003730949
modifier: mxlcola
reps: 1
scheduled_days: 0
stability: 2.4
state: 1
tags: DMA ?
title: DMA传输数据的配置参考代码-标准库

```c
DMA_InitTypeDef DMA_InitStructure;

RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);  // 开启DMA时钟

DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)&USART1->DR;  // 外设地址
DMA_InitStructure.DMA_MemoryBaseAddr = (uint32_t)buffer;  // 内存地址
DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;  // 传输方向
DMA_InitStructure.DMA_BufferSize = 100;  // 传输数据量
DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;  // 外设地址不递增
DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;  // 内存地址递增
DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;  // 外设数据宽度
DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;  // 内存数据宽度
DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;  // 循环模式
DMA_InitStructure.DMA_Priority = DMA_Priority_Medium;  // 中优先级
DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;  // 禁用内存到内存

DMA_Init(DMA1_Channel4, &DMA_InitStructure);  // 初始化DMA
DMA_Cmd(DMA1_Channel4, ENABLE);  // 使能DMA


```